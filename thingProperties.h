// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "f3d7d3f5-8f75-4b36-b80c-a574c406bca9";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onMessageChange();
void onAlarmEndTimeChange();
void onAlarmStartTimeChange();
void onDistanceChange();
void onAlarmStateChange();
void onLedStateChange();

String message;
float humidity;
float temperature;
int alarmEndTime;
int alarmStartTime;
int distance;
int gas;
bool alarmState;
bool buzzerActive;
bool highGas;
bool highHumidity;
bool highTemperature;
bool ledState;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(message, READWRITE, ON_CHANGE, onMessageChange);
  ArduinoCloud.addProperty(humidity, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(temperature, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(alarmEndTime, READWRITE, ON_CHANGE, onAlarmEndTimeChange, 22);
  ArduinoCloud.addProperty(alarmStartTime, READWRITE, ON_CHANGE, onAlarmStartTimeChange, 7);
  ArduinoCloud.addProperty(distance, READWRITE, ON_CHANGE, onDistanceChange);
  ArduinoCloud.addProperty(gas, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(alarmState, READWRITE, ON_CHANGE, onAlarmStateChange);
  ArduinoCloud.addProperty(buzzerActive, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(highGas, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(highHumidity, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(highTemperature, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(ledState, READWRITE, ON_CHANGE, onLedStateChange);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
